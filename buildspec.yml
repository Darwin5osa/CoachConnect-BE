version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG .
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Writing image definitions file...
      - printf '[{"name":"backend-container","imageUri":"%s"}]' $IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - echo '#!/usr/bin/env bash' > coachconnect-run.sh
      - echo 'docker stop $(docker ps -q)' >> coachconnect-run.sh
      - echo 'docker rm -f $(docker ps -aq)' >> coachconnect-run.sh
      - echo 'docker rmi $(docker images -q -f dangling=true)' >> coachconnect-run.sh
      - echo 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com' >> coachconnect-run.sh
      - echo 'docker pull "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"' >> coachconnect-run.sh
      - echo 'docker run -e "RDS_ENDPOINT=${RDS_ENDPOINT}" -e "DB_USERNAME=${DB_USERNAME}" -e "DB_PASSWORD=${DB_PASSWORD}" -p 8080:8080 -d "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"' >> coachconnect-run.sh  
      - chmod +x coachconnect-run.sh
artifacts:
  files:
   - imagedefinitions.json
   - appspec.yml
   - coachconnect-run.sh
